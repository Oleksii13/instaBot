{"version":3,"sources":["utils/API.js","App.js","serviceWorker.js","index.js"],"names":["API","start","axios","get","login","username","password","post","like","tag","quant","follow","unfollow","App","state","likeQuant","likeTag","followQuant","unfollowQuant","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","Start","_callee","res","regenerator_default","a","wrap","_context","prev","next","sent","console","log","stop","Login","_callee2","_context2","Like","_callee3","_context3","Follow","_callee4","_context4","Unfollow","_callee5","_context5","_this2","this","react_default","createElement","Form","Group","controlId","Label","Button","variant","size","block","onClick","Control","type","placeholder","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.672ca338.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    start: () => {\n        return (\n            axios.get(\"/api/start\")\n        )\n\n    },\n\n    login: (username, password) => {\n        return (\n            axios.post(\"/api/login\", { username, password })\n        )\n    },\n\n    like: (tag, quant) => {\n        return (\n            axios.post(\"/api/like\", { tag, quant })\n        )\n\n    },\n\n    follow: (quant) => {\n        return (\n            axios.post(\"/api/follow\", { quant })\n        )\n\n    },\n\n    unfollow: (quant) => {\n        return (\n            axios.post(\"/api/unfollow\", { quant })\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button, Form, } from \"react-bootstrap\";\nimport API from './utils/API'\n// require('./dotenv').config();\n// const { USERNAME_L, PASSWORD } = process.env\n// eslint-disable-next-line\n\n\n\n\nclass App extends Component {\n\n  state = {\n    username: \"ivan.molotov.13\",\n    password: \"baraban13\",\n    likeQuant: 3,\n    likeTag: \"webdeveloper\",\n    followQuant: 3,\n    unfollowQuant: 3\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  Start = async () => {\n    const res = await API.start()\n    await console.log(res);\n\n  }\n\n  Login = async () => {\n    const res = await API.login(this.state.username, this.state.password);\n    console.log(res)\n  }\n\n\n  Like = async () => {\n    const res = await API.like(this.state.likeTag, this.state.likeQuant);\n    console.log(res)\n  }\n\n  Follow = async () => {\n    const res = await API.follow(this.state.followQuant);\n    console.log(res);\n  }\n\n  Unfollow = async () => {\n    const res = await API.unfollow(this.state.unfollowQuant);\n    console.log(res)\n  }\n\n\n\n  render() {\n    return (\n      <div >\n\n        <Form.Group controlId=\"Start\">\n          <Form.Label>Start App</Form.Label>\n          <Button variant=\"danger\" size=\"lg\" block onClick={() => { this.Start() }}>\n            Start\n          </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"Login\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"username\" name=\"username\" onChange={(this.handleChange)} />\n          <Form.Label>Password</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"password\" name=\"password\" onChange={(this.handleChange)} />\n          <Button variant=\"primary\" size=\"lg\" block onClick={() => { this.Login() }}>\n            Login\n          </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"Likes\">\n          <Form.Label>Like's quantity</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"number of likes\" name=\"likeQuant\" onChange={(this.handleChange)} />\n          <Form.Label>Liked tag</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"liked tag\" name=\"likeTag\" onChange={(this.handleChange)} />\n          <Button variant=\"secondary\" size=\"lg\" block onClick={() => { this.Like() }}>\n            Like\n       </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"Follow\">\n          <Form.Label>Follower's quantity</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"follow\" name=\"followQuant\" onChange={(this.handleChange)} />\n          <Button variant=\"primary\" size=\"lg\" block onClick={() => { this.Follow() }}>\n            Follow\n       </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"Unfollow\">\n          <Form.Label>Unfollower's quantity</Form.Label>\n          <Form.Control size=\"lg\" type=\"text\" placeholder=\"unfollow\" name=\"unfollowQuant\" onChange={(this.handleChange)} />\n          <Button variant=\"secondary\" size=\"lg\" block onClick={() => { this.Unfollow() }}>\n            Unfollow\n       </Button>\n        </Form.Group >\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}